<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.iluwatar</groupId>
  <artifactId>java-design-patterns</artifactId>
  <version>1.26.0-SNAPSHOT</version>
  <packaging>pom</packaging>
  <inceptionYear>2014-2022</inceptionYear>
  <name>Java Design Patterns</name>
  <description>Java Design Patterns</description>
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <sonar-maven-plugin.version>5.0.0.4389</sonar-maven-plugin.version>
    <spring-boot.version>2.7.5</spring-boot.version>
    <jacoco.version>0.8.12</jacoco.version>
    <commons-dbcp.version>1.4</commons-dbcp.version>
    <htmlunit.version>4.7.0</htmlunit.version>
    <gson.version>2.11.0</gson.version>
    <guice.version>6.0.0</guice.version>
    <system-lambda.version>1.1.0</system-lambda.version>
    <maven-surefire-plugin.version>3.5.2</maven-surefire-plugin.version>
    <maven-checkstyle-plugin.version>3.6.0</maven-checkstyle-plugin.version>
    <license-maven-plugin.version>4.6</license-maven-plugin.version>
    <urm-maven-plugin.version>2.1.1</urm-maven-plugin.version>
    <maven-compiler-plugin.version>3.14.0</maven-compiler-plugin.version>
    <lombok.version>1.18.36</lombok.version>
    <!-- SonarCloud -->
    <sonar.host.url>https://sonarcloud.io</sonar.host.url>
    <sonar.organization>iluwatar</sonar.organization>
    <sonar.projectKey>iluwatar_java-design-patterns</sonar.projectKey>
    <sonar.moduleKey>${project.artifactId}</sonar.moduleKey>
    <sonar.projectName>Java Design Patterns</sonar.projectName>
  </properties>
  <modules>
    <module>abstract-factory</module>
    <module>collecting-parameter</module>
    <module>monitor</module>
    <module>builder</module>
    <module>factory-method</module>
    <module>prototype</module>
    <module>singleton</module>
    <module>adapter</module>
    <module>bridge</module>
    <module>composite</module>
    <module>data-access-object</module>
    <module>data-mapper</module>
    <module>decorator</module>
    <module>facade</module>
    <module>flyweight</module>
    <module>proxy</module>
    <module>chain-of-responsibility</module>
    <module>command</module>
    <module>interpreter</module>
    <module>iterator</module>
    <module>mediator</module>
    <module>memento</module>
    <module>model-view-presenter</module>
    <module>observer</module>
    <module>state</module>
    <module>strategy</module>
    <module>template-method</module>
    <module>version-number</module>
    <module>visitor</module>
    <module>double-checked-locking</module>
    <module>servant</module>
    <module>service-locator</module>
    <module>null-object</module>
    <module>event-aggregator</module>
    <module>callback</module>
    <module>execute-around</module>
    <module>property</module>
    <module>intercepting-filter</module>
    <module>producer-consumer</module>
    <module>pipeline</module>
    <module>poison-pill</module>
    <module>lazy-loading</module>
    <module>service-layer</module>
    <module>specification</module>
    <module>tolerant-reader</module>
    <module>model-view-controller</module>
    <module>flux</module>
    <module>double-dispatch</module>
    <module>multiton</module>
    <module>resource-acquisition-is-initialization</module>
    <module>twin</module>
    <module>private-class-data</module>
    <module>object-pool</module>
    <module>dependency-injection</module>
    <module>front-controller</module>
    <module>repository</module>
    <module>async-method-invocation</module>
    <module>monostate</module>
    <module>step-builder</module>
    <module>business-delegate</module>
    <module>half-sync-half-async</module>
    <module>layered-architecture</module>
    <module>fluent-interface</module>
    <module>reactor</module>
    <module>caching</module>
    <module>delegation</module>
    <module>event-driven-architecture</module>
    <module>microservices-api-gateway</module>
    <module>factory-kit</module>
    <module>feature-toggle</module>
    <module>value-object</module>
    <module>monad</module>
    <module>mute-idiom</module>
    <module>hexagonal-architecture</module>
    <module>abstract-document</module>
    <module>microservices-aggregrator</module>
    <module>promise</module>
    <module>page-controller</module>
    <module>page-object</module>
    <module>event-based-asynchronous</module>
    <module>event-queue</module>
    <module>queue-based-load-leveling</module>
    <module>object-mother</module>
    <module>data-bus</module>
    <module>converter</module>
    <module>guarded-suspension</module>
    <module>balking</module>
    <module>extension-objects</module>
    <module>marker-interface</module>
    <module>command-query-responsibility-segregation</module>
    <module>event-sourcing</module>
    <module>data-transfer-object</module>
    <module>throttling</module>
    <module>unit-of-work</module>
    <module>partial-response</module>
    <module>retry</module>
    <module>dirty-flag</module>
    <module>trampoline</module>
    <module>ambassador</module>
    <module>acyclic-visitor</module>
    <module>collection-pipeline</module>
    <module>master-worker</module>
    <module>spatial-partition</module>
    <module>commander</module>
    <module>type-object</module>
    <module>bytecode</module>
    <module>leader-election</module>
    <module>data-locality</module>
    <module>subclass-sandbox</module>
    <module>circuit-breaker</module>
    <module>role-object</module>
    <module>saga</module>
    <module>double-buffer</module>
    <module>sharding</module>
    <module>game-loop</module>
    <module>combinator</module>
    <module>update-method</module>
    <module>leader-followers</module>
    <module>strangler</module>
    <module>arrange-act-assert</module>
    <module>transaction-script</module>
    <module>registry</module>
    <module>filterer</module>
    <module>factory</module>
    <module>separated-interface</module>
    <module>special-case</module>
    <module>parameter-object</module>
    <module>active-object</module>
    <module>model-view-viewmodel</module>
    <module>composite-entity</module>
    <module>table-module</module>
    <module>presentation-model</module>
    <module>lockable-object</module>
    <module>fanout-fanin</module>
    <module>domain-model</module>
    <module>composite-view</module>
    <module>metadata-mapping</module>
    <module>service-to-worker</module>
    <module>client-session</module>
    <module>model-view-intent</module>
    <module>currying</module>
    <module>serialized-entity</module>
    <module>identity-map</module>
    <module>component</module>
    <module>context-object</module>
    <module>optimistic-offline-lock</module>
    <module>curiously-recurring-template-pattern</module>
    <module>microservices-log-aggregation</module>
    <module>anti-corruption-layer</module>
    <module>health-check</module>
    <module>notification</module>
    <module>single-table-inheritance</module>
    <module>dynamic-proxy</module>
    <module>gateway</module>
    <module>serialized-lob</module>
    <module>server-session</module>
    <module>virtual-proxy</module>
    <module>function-composition</module>
    <module>microservices-distributed-tracing</module>
    <module>microservices-client-side-ui-composition</module>
    <module>microservices-idempotent-consumer</module>
    <module>microservices-message-broker</module>
    <module>application-listeners</module>
    <module>minimum-viable-product</module>
    <module>microservices-event-driven</module>
  </modules>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>${jacoco.version}</version>
          <executions>
            <execution>
              <id>prepare-agent</id>
              <goals>
                <goal>prepare-agent</goal>
              </goals>
              <phase>initialize</phase>
            </execution>
            <execution>
              <id>report</id>
              <goals>
                <goal>report</goal>
              </goals>
              <phase>verify</phase>
            </execution>
            <execution>
              <id>report-aggregate</id>
              <goals>
                <goal>report-aggregate</goal>
              </goals>
              <phase>verify</phase>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
</project>
